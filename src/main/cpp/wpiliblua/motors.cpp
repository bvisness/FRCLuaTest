// Automatically generated by bindings.c. DO NOT EDIT.

#include <cassert>
#include <ctre/phoenix/motorcontrol/can/WPI_TalonFX.h>
#include <ctre/phoenix/motorcontrol/can/WPI_TalonSRX.h>
#include <frc/PWMSparkMax.h>
#include <frc/drive/DifferentialDrive.h>

#include "luadef.h"

LUAFUNC void* PWMSparkMax_new(int channel) {
    return new frc::PWMSparkMax(channel);
}

LUAFUNC void* PWMSparkMax_toSpeedController(void* _this) {
    frc::SpeedController* _converted = (frc::PWMSparkMax*)_this;
    return _converted;
}

LUAFUNC void PWMSparkMax_Set(void* _this, double value) {
    return ((frc::PWMSparkMax*)_this)
        ->Set(value);
}

LUAFUNC void* TalonSRX_new(int deviceNumber) {
    return new ctre::phoenix::motorcontrol::can::WPI_TalonSRX(deviceNumber);
}

LUAFUNC void* TalonSRX_toSpeedController(void* _this) {
    frc::SpeedController* _converted = (ctre::phoenix::motorcontrol::can::WPI_TalonSRX*)_this;
    return _converted;
}

LUAFUNC double TalonSRX_Get(void* _this) {
    return ((ctre::phoenix::motorcontrol::can::WPI_TalonSRX*)_this)
        ->Get();
}

LUAFUNC void TalonSRX_Set(void* _this, double value) {
    return ((ctre::phoenix::motorcontrol::can::WPI_TalonSRX*)_this)
        ->Set(value);
}

LUAFUNC void TalonSRX_SetInverted(void* _this, int invertType) {
    return ((ctre::phoenix::motorcontrol::can::WPI_TalonSRX*)_this)
        ->SetInverted((ctre::phoenix::motorcontrol::InvertType)invertType);
}

LUAFUNC void* TalonFX_new(int deviceNumber) {
    return new ctre::phoenix::motorcontrol::can::WPI_TalonFX(deviceNumber);
}

LUAFUNC void* TalonFX_toSpeedController(void* _this) {
    frc::SpeedController* _converted = (ctre::phoenix::motorcontrol::can::WPI_TalonFX*)_this;
    return _converted;
}

LUAFUNC double TalonFX_Get(void* _this) {
    return ((ctre::phoenix::motorcontrol::can::WPI_TalonFX*)_this)
        ->Get();
}

LUAFUNC void TalonFX_Set(void* _this, double value) {
    return ((ctre::phoenix::motorcontrol::can::WPI_TalonFX*)_this)
        ->Set(value);
}

LUAFUNC void TalonFX_SetInverted(void* _this, int invertType) {
    return ((ctre::phoenix::motorcontrol::can::WPI_TalonFX*)_this)
        ->SetInverted((ctre::phoenix::motorcontrol::InvertType)invertType);
}

LUAFUNC void* DifferentialDrive_new(void* leftMotor, void* rightMotor) {

      assert(leftMotor);
      assert(rightMotor);
      auto l = (frc::SpeedController*)leftMotor;
      auto r = (frc::SpeedController*)rightMotor;
      return new frc::DifferentialDrive(*l, *r);
    
}

LUAFUNC void DifferentialDrive_ArcadeDrive(void* _this, double xSpeed, double zRotation, bool squareInputs) {
    return ((frc::DifferentialDrive*)_this)
        ->ArcadeDrive(xSpeed, zRotation, squareInputs);
}
